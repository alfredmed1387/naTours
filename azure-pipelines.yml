trigger:
 - main

pool:
  vmImage: 'ubuntu-latest' 

variables:
  imageName: 'pipelines-javascript-docker'
  webRepository: 'web'
  tag: '$(Build.BuildId)'

stages:
- stage: 'Build'
  displayName: 'Build and push'
  jobs:  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: 'ubuntu-20.04'
    steps:
    - task: Docker@2
      displayName: 'Build and push the image to container registry'
      inputs:
        command: buildAndPush
        buildContext: $(Build.Repository.LocalPath)
        repository: $(webRepository)
        dockerfile: '$(Build.SourcesDirectory)/Dockerfile.dev'
        containerRegistry: 'Container Registry Connection'
        tags: |
          $(tag)
- stage: 'Deploy'
  displayName: 'Deploy the container'
  dependsOn: Build
  jobs:
  - job: 'Deploy'
    displayName: 'Deploy job'
    pool:
      vmImage: 'ubuntu-20.04'
    variables:
    - group: Release
    steps:
    - task: AzureWebAppContainer@1
      inputs:
       appName: $(WebAppName)
       azureSubscription: 'Pago por uso (01935c15-660b-49b8-8670-8f0989da72c1)'
       imageName: $(RegistryName).azurecr.io/$(webRepository):$(build.buildId)
# steps:
#- task: DockerInstaller@0
#  displayName: Docker Installer
#  inputs:
#    dockerVersion: 17.09.0-ce
#    releaseType: stable
#- task: Docker@2
#  displayName: Build an image
#  inputs:
#    repository: $(imageName)
#    command: build
#    Dockerfile: Dockerfile.dev
